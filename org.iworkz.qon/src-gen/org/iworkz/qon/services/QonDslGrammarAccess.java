/*
 * generated by Xtext
 */
package org.iworkz.qon.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class QonDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class QRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeQObjectCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeQObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeQObjectCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSystemPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSystemPropertiesQSystemPropertyParserRuleCall_3_0 = (RuleCall)cSystemPropertiesAssignment_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPropertiesQPropertyParserRuleCall_4_0 = (RuleCall)cPropertiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * 
		// * Qualified Object Notation (QON)
		// * 
		// * / QRoot:
		//	{QObject} type=[QObject]? "{" systemProperties+=QSystemProperty* properties+=QProperty* "}";
		@Override public ParserRule getRule() { return rule; }

		//{QObject} type=[QObject]? "{" systemProperties+=QSystemProperty* properties+=QProperty* "}"
		public Group getGroup() { return cGroup; }

		//{QObject}
		public Action getQObjectAction_0() { return cQObjectAction_0; }

		//type=[QObject]?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[QObject]
		public CrossReference getTypeQObjectCrossReference_1_0() { return cTypeQObjectCrossReference_1_0; }

		//ID
		public RuleCall getTypeQObjectIDTerminalRuleCall_1_0_1() { return cTypeQObjectIDTerminalRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//systemProperties+=QSystemProperty*
		public Assignment getSystemPropertiesAssignment_3() { return cSystemPropertiesAssignment_3; }

		//QSystemProperty
		public RuleCall getSystemPropertiesQSystemPropertyParserRuleCall_3_0() { return cSystemPropertiesQSystemPropertyParserRuleCall_3_0; }

		//properties+=QProperty*
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }

		//QProperty
		public RuleCall getPropertiesQPropertyParserRuleCall_4_0() { return cPropertiesQPropertyParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class QObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeQObjectCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeQObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeQObjectCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertiesQPropertyParserRuleCall_3_0 = (RuleCall)cPropertiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//QObject:
		//	{QObject} type=[QObject]? "{" properties+=QProperty* "}";
		@Override public ParserRule getRule() { return rule; }

		//{QObject} type=[QObject]? "{" properties+=QProperty* "}"
		public Group getGroup() { return cGroup; }

		//{QObject}
		public Action getQObjectAction_0() { return cQObjectAction_0; }

		//type=[QObject]?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[QObject]
		public CrossReference getTypeQObjectCrossReference_1_0() { return cTypeQObjectCrossReference_1_0; }

		//ID
		public RuleCall getTypeQObjectIDTerminalRuleCall_1_0_1() { return cTypeQObjectIDTerminalRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//properties+=QProperty*
		public Assignment getPropertiesAssignment_3() { return cPropertiesAssignment_3; }

		//QProperty
		public RuleCall getPropertiesQPropertyParserRuleCall_3_0() { return cPropertiesQPropertyParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class QSystemPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QSystemProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamespacePropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSchemaPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImportPropertyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QSystemProperty:
		//	NamespaceProperty | SchemaProperty | ImportProperty;
		@Override public ParserRule getRule() { return rule; }

		//NamespaceProperty | SchemaProperty | ImportProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//NamespaceProperty
		public RuleCall getNamespacePropertyParserRuleCall_0() { return cNamespacePropertyParserRuleCall_0; }

		//SchemaProperty
		public RuleCall getSchemaPropertyParserRuleCall_1() { return cSchemaPropertyParserRuleCall_1; }

		//ImportProperty
		public RuleCall getImportPropertyParserRuleCall_2() { return cImportPropertyParserRuleCall_2; }
	}

	public class NamespacePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamespaceProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNamespaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//NamespaceProperty:
		//	"$namespace" ":" value=STRING;
		@Override public ParserRule getRule() { return rule; }

		//"$namespace" ":" value=STRING
		public Group getGroup() { return cGroup; }

		//"$namespace"
		public Keyword getNamespaceKeyword_0() { return cNamespaceKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class SchemaPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SchemaProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSchemaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinkAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLinkQObjectCrossReference_3_0 = (CrossReference)cLinkAssignment_3.eContents().get(0);
		private final RuleCall cLinkQObjectSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cLinkQObjectCrossReference_3_0.eContents().get(1);
		
		//SchemaProperty:
		//	"$schema" "-" ">" link=[QObject|STRING];
		@Override public ParserRule getRule() { return rule; }

		//"$schema" "-" ">" link=[QObject|STRING]
		public Group getGroup() { return cGroup; }

		//"$schema"
		public Keyword getSchemaKeyword_0() { return cSchemaKeyword_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }

		//link=[QObject|STRING]
		public Assignment getLinkAssignment_3() { return cLinkAssignment_3; }

		//[QObject|STRING]
		public CrossReference getLinkQObjectCrossReference_3_0() { return cLinkQObjectCrossReference_3_0; }

		//STRING
		public RuleCall getLinkQObjectSTRINGTerminalRuleCall_3_0_1() { return cLinkQObjectSTRINGTerminalRuleCall_3_0_1; }
	}

	public class ImportPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImportPropertyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImportsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cValuesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cValuesImportParserRuleCall_4_0_0 = (RuleCall)cValuesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cValuesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cValuesImportParserRuleCall_4_1_1_0 = (RuleCall)cValuesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ImportProperty:
		//	{ImportProperty} "$imports" ":" "[" (values+=Import ("," values+=Import)*)? "]";
		@Override public ParserRule getRule() { return rule; }

		//{ImportProperty} "$imports" ":" "[" (values+=Import ("," values+=Import)*)? "]"
		public Group getGroup() { return cGroup; }

		//{ImportProperty}
		public Action getImportPropertyAction_0() { return cImportPropertyAction_0; }

		//"$imports"
		public Keyword getImportsKeyword_1() { return cImportsKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//(values+=Import ("," values+=Import)*)?
		public Group getGroup_4() { return cGroup_4; }

		//values+=Import
		public Assignment getValuesAssignment_4_0() { return cValuesAssignment_4_0; }

		//Import
		public RuleCall getValuesImportParserRuleCall_4_0_0() { return cValuesImportParserRuleCall_4_0_0; }

		//("," values+=Import)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//values+=Import
		public Assignment getValuesAssignment_4_1_1() { return cValuesAssignment_4_1_1; }

		//Import
		public RuleCall getValuesImportParserRuleCall_4_1_1_0() { return cValuesImportParserRuleCall_4_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Assignment cImportedNamespaceAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cImportedNamespaceSTRINGTerminalRuleCall_0 = (RuleCall)cImportedNamespaceAssignment.eContents().get(0);
		
		//Import:
		//	importedNamespace=STRING;
		@Override public ParserRule getRule() { return rule; }

		//importedNamespace=STRING
		public Assignment getImportedNamespaceAssignment() { return cImportedNamespaceAssignment; }

		//STRING
		public RuleCall getImportedNamespaceSTRINGTerminalRuleCall_0() { return cImportedNamespaceSTRINGTerminalRuleCall_0; }
	}

	public class QPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQValuePropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQLinkPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//QProperty:
		//	QValueProperty | QLinkProperty;
		@Override public ParserRule getRule() { return rule; }

		//QValueProperty | QLinkProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//QValueProperty
		public RuleCall getQValuePropertyParserRuleCall_0() { return cQValuePropertyParserRuleCall_0; }

		//QLinkProperty
		public RuleCall getQLinkPropertyParserRuleCall_1() { return cQLinkPropertyParserRuleCall_1; }
	}

	public class QLinkPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QLinkProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQLinkObjectPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQLinkArrayPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//QLinkProperty:
		//	QLinkObjectProperty | QLinkArrayProperty;
		@Override public ParserRule getRule() { return rule; }

		//QLinkObjectProperty | QLinkArrayProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//QLinkObjectProperty
		public RuleCall getQLinkObjectPropertyParserRuleCall_0() { return cQLinkObjectPropertyParserRuleCall_0; }

		//QLinkArrayProperty
		public RuleCall getQLinkArrayPropertyParserRuleCall_1() { return cQLinkArrayPropertyParserRuleCall_1; }
	}

	public class QLinkObjectPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QLinkObjectProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinkAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLinkQObjectCrossReference_3_0 = (CrossReference)cLinkAssignment_3.eContents().get(0);
		private final RuleCall cLinkQObjectSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cLinkQObjectCrossReference_3_0.eContents().get(1);
		
		//QLinkObjectProperty:
		//	propertyName=ID "-" ">" link=[QObject|STRING];
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID "-" ">" link=[QObject|STRING]
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }

		//link=[QObject|STRING]
		public Assignment getLinkAssignment_3() { return cLinkAssignment_3; }

		//[QObject|STRING]
		public CrossReference getLinkQObjectCrossReference_3_0() { return cLinkQObjectCrossReference_3_0; }

		//STRING
		public RuleCall getLinkQObjectSTRINGTerminalRuleCall_3_0_1() { return cLinkQObjectSTRINGTerminalRuleCall_3_0_1; }
	}

	public class QLinkArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QLinkArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cLinksAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cLinksQObjectCrossReference_4_0_0 = (CrossReference)cLinksAssignment_4_0.eContents().get(0);
		private final RuleCall cLinksQObjectSTRINGTerminalRuleCall_4_0_0_1 = (RuleCall)cLinksQObjectCrossReference_4_0_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cLinksAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final CrossReference cLinksQObjectCrossReference_4_1_1_0 = (CrossReference)cLinksAssignment_4_1_1.eContents().get(0);
		private final RuleCall cLinksQObjectSTRINGTerminalRuleCall_4_1_1_0_1 = (RuleCall)cLinksQObjectCrossReference_4_1_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//QLinkArrayProperty:
		//	propertyName=ID "-" ">" "[" (links+=[QObject|STRING] ("," links+=[QObject|STRING])*)? "]";
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID "-" ">" "[" (links+=[QObject|STRING] ("," links+=[QObject|STRING])*)? "]"
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//(links+=[QObject|STRING] ("," links+=[QObject|STRING])*)?
		public Group getGroup_4() { return cGroup_4; }

		//links+=[QObject|STRING]
		public Assignment getLinksAssignment_4_0() { return cLinksAssignment_4_0; }

		//[QObject|STRING]
		public CrossReference getLinksQObjectCrossReference_4_0_0() { return cLinksQObjectCrossReference_4_0_0; }

		//STRING
		public RuleCall getLinksQObjectSTRINGTerminalRuleCall_4_0_0_1() { return cLinksQObjectSTRINGTerminalRuleCall_4_0_0_1; }

		//("," links+=[QObject|STRING])*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//links+=[QObject|STRING]
		public Assignment getLinksAssignment_4_1_1() { return cLinksAssignment_4_1_1; }

		//[QObject|STRING]
		public CrossReference getLinksQObjectCrossReference_4_1_1_0() { return cLinksQObjectCrossReference_4_1_1_0; }

		//STRING
		public RuleCall getLinksQObjectSTRINGTerminalRuleCall_4_1_1_0_1() { return cLinksQObjectSTRINGTerminalRuleCall_4_1_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class QValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QValueProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQStringValuePropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQNumberValuePropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cQBooleanValuePropertyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQNullValuePropertyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cQObjectPropertyParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cQStringArrayPropertyParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cQObjectArrayPropertyParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cQNumberArrayPropertyParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cQEmptyArrayPropertyParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//QValueProperty:
		//	QStringValueProperty | QNumberValueProperty | QBooleanValueProperty | QNullValueProperty | QObjectProperty |
		//	QStringArrayProperty | QObjectArrayProperty | QNumberArrayProperty | QEmptyArrayProperty;
		@Override public ParserRule getRule() { return rule; }

		//QStringValueProperty | QNumberValueProperty | QBooleanValueProperty | QNullValueProperty | QObjectProperty |
		//QStringArrayProperty | QObjectArrayProperty | QNumberArrayProperty | QEmptyArrayProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//QStringValueProperty
		public RuleCall getQStringValuePropertyParserRuleCall_0() { return cQStringValuePropertyParserRuleCall_0; }

		//QNumberValueProperty
		public RuleCall getQNumberValuePropertyParserRuleCall_1() { return cQNumberValuePropertyParserRuleCall_1; }

		//QBooleanValueProperty
		public RuleCall getQBooleanValuePropertyParserRuleCall_2() { return cQBooleanValuePropertyParserRuleCall_2; }

		//QNullValueProperty
		public RuleCall getQNullValuePropertyParserRuleCall_3() { return cQNullValuePropertyParserRuleCall_3; }

		//QObjectProperty
		public RuleCall getQObjectPropertyParserRuleCall_4() { return cQObjectPropertyParserRuleCall_4; }

		//QStringArrayProperty
		public RuleCall getQStringArrayPropertyParserRuleCall_5() { return cQStringArrayPropertyParserRuleCall_5; }

		//QObjectArrayProperty
		public RuleCall getQObjectArrayPropertyParserRuleCall_6() { return cQObjectArrayPropertyParserRuleCall_6; }

		//QNumberArrayProperty
		public RuleCall getQNumberArrayPropertyParserRuleCall_7() { return cQNumberArrayPropertyParserRuleCall_7; }

		//QEmptyArrayProperty
		public RuleCall getQEmptyArrayPropertyParserRuleCall_8() { return cQEmptyArrayPropertyParserRuleCall_8; }
	}

	public class QObjectPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QObjectProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueQObjectParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//QObjectProperty:
		//	propertyName=ID ":" value=QObject;
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" value=QObject
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=QObject
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//QObject
		public RuleCall getValueQObjectParserRuleCall_2_0() { return cValueQObjectParserRuleCall_2_0; }
	}

	public class QStringValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QStringValueProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//QStringValueProperty:
		//	propertyName=ID ":" value=STRING;
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" value=STRING
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class QNumberValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QNumberValueProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueNumberParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//QNumberValueProperty:
		//	propertyName=ID ":" value=Number;
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" value=Number
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=Number
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Number
		public RuleCall getValueNumberParserRuleCall_2_0() { return cValueNumberParserRuleCall_2_0; }
	}

	public class QBooleanValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QBooleanValueProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueBooleanValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//QBooleanValueProperty:
		//	propertyName=ID ":" value=BooleanValue;
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" value=BooleanValue
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=BooleanValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//BooleanValue
		public RuleCall getValueBooleanValueParserRuleCall_2_0() { return cValueBooleanValueParserRuleCall_2_0; }
	}

	public class QNullValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QNullValueProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNullKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QNullValueProperty:
		//	propertyName=ID ":" "null";
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" "null"
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"null"
		public Keyword getNullKeyword_2() { return cNullKeyword_2; }
	}

	public class QObjectArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QObjectArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesQObjectParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValuesQObjectParserRuleCall_4_1_0 = (RuleCall)cValuesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//QObjectArrayProperty:
		//	propertyName=ID ":" "[" values+=QObject ("," values+=QObject)* "]";
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" "[" values+=QObject ("," values+=QObject)* "]"
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//values+=QObject
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//QObject
		public RuleCall getValuesQObjectParserRuleCall_3_0() { return cValuesQObjectParserRuleCall_3_0; }

		//("," values+=QObject)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//values+=QObject
		public Assignment getValuesAssignment_4_1() { return cValuesAssignment_4_1; }

		//QObject
		public RuleCall getValuesQObjectParserRuleCall_4_1_0() { return cValuesQObjectParserRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class QStringArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QStringArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesSTRINGTerminalRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cValuesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//QStringArrayProperty:
		//	propertyName=ID ":" "[" values+=STRING ("," values+=STRING)* "]";
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" "[" values+=STRING ("," values+=STRING)* "]"
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//values+=STRING
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_3_0() { return cValuesSTRINGTerminalRuleCall_3_0; }

		//("," values+=STRING)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//values+=STRING
		public Assignment getValuesAssignment_4_1() { return cValuesAssignment_4_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_4_1_0() { return cValuesSTRINGTerminalRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class QNumberArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QNumberArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesNumberParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValuesNumberParserRuleCall_4_1_0 = (RuleCall)cValuesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//QNumberArrayProperty:
		//	propertyName=ID ":" "[" values+=Number ("," values+=Number)* "]";
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" "[" values+=Number ("," values+=Number)* "]"
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//values+=Number
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//Number
		public RuleCall getValuesNumberParserRuleCall_3_0() { return cValuesNumberParserRuleCall_3_0; }

		//("," values+=Number)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//values+=Number
		public Assignment getValuesAssignment_4_1() { return cValuesAssignment_4_1; }

		//Number
		public RuleCall getValuesNumberParserRuleCall_4_1_0() { return cValuesNumberParserRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class QEmptyArrayPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QEmptyArrayProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_0_0 = (RuleCall)cPropertyNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//QEmptyArrayProperty:
		//	propertyName=ID ":" "[" "]";
		@Override public ParserRule getRule() { return rule; }

		//propertyName=ID ":" "[" "]"
		public Group getGroup() { return cGroup; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_0() { return cPropertyNameAssignment_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_0_0() { return cPropertyNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cTrueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cTrueTrueKeyword_0_0 = (Keyword)cTrueAssignment_0.eContents().get(0);
		private final Assignment cFalseAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cFalseFalseKeyword_1_0 = (Keyword)cFalseAssignment_1.eContents().get(0);
		
		//BooleanValue:
		//	true?="true" | false?="false";
		@Override public ParserRule getRule() { return rule; }

		//true?="true" | false?="false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//true?="true"
		public Assignment getTrueAssignment_0() { return cTrueAssignment_0; }

		//"true"
		public Keyword getTrueTrueKeyword_0_0() { return cTrueTrueKeyword_0_0; }

		//false?="false"
		public Assignment getFalseAssignment_1() { return cFalseAssignment_1; }

		//"false"
		public Keyword getFalseFalseKeyword_1_0() { return cFalseFalseKeyword_1_0; }
	}

	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Number");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cEKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cEKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Keyword cPlusSignKeyword_3_1_0 = (Keyword)cAlternatives_3_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		
		//Number hidden():
		//	"-"? INT ("." INT)? (("e" | "E") ("+" | "-") INT)?;
		@Override public ParserRule getRule() { return rule; }

		//"-"? INT ("." INT)? (("e" | "E") ("+" | "-") INT)?
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//("." INT)?
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_2_1() { return cINTTerminalRuleCall_2_1; }

		//(("e" | "E") ("+" | "-") INT)?
		public Group getGroup_3() { return cGroup_3; }

		//"e" | "E"
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }

		//"e"
		public Keyword getEKeyword_3_0_0() { return cEKeyword_3_0_0; }

		//"E"
		public Keyword getEKeyword_3_0_1() { return cEKeyword_3_0_1; }

		//"+" | "-"
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//"+"
		public Keyword getPlusSignKeyword_3_1_0() { return cPlusSignKeyword_3_1_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_3_1_1() { return cHyphenMinusKeyword_3_1_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_3_2() { return cINTTerminalRuleCall_3_2; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName hidden():
		//	ID ("." ID)*;
		@Override public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildCard hidden():
		//	QualifiedName ".*"?;
		@Override public ParserRule getRule() { return rule; }

		//QualifiedName ".*"?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//".*"?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	
	
	private final QRootElements pQRoot;
	private final QObjectElements pQObject;
	private final QSystemPropertyElements pQSystemProperty;
	private final NamespacePropertyElements pNamespaceProperty;
	private final SchemaPropertyElements pSchemaProperty;
	private final ImportPropertyElements pImportProperty;
	private final ImportElements pImport;
	private final QPropertyElements pQProperty;
	private final QLinkPropertyElements pQLinkProperty;
	private final QLinkObjectPropertyElements pQLinkObjectProperty;
	private final QLinkArrayPropertyElements pQLinkArrayProperty;
	private final QValuePropertyElements pQValueProperty;
	private final QObjectPropertyElements pQObjectProperty;
	private final QStringValuePropertyElements pQStringValueProperty;
	private final QNumberValuePropertyElements pQNumberValueProperty;
	private final QBooleanValuePropertyElements pQBooleanValueProperty;
	private final QNullValuePropertyElements pQNullValueProperty;
	private final QObjectArrayPropertyElements pQObjectArrayProperty;
	private final QStringArrayPropertyElements pQStringArrayProperty;
	private final QNumberArrayPropertyElements pQNumberArrayProperty;
	private final QEmptyArrayPropertyElements pQEmptyArrayProperty;
	private final BooleanValueElements pBooleanValue;
	private final NumberElements pNumber;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameWithWildCardElements pQualifiedNameWithWildCard;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public QonDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pQRoot = new QRootElements();
		this.pQObject = new QObjectElements();
		this.pQSystemProperty = new QSystemPropertyElements();
		this.pNamespaceProperty = new NamespacePropertyElements();
		this.pSchemaProperty = new SchemaPropertyElements();
		this.pImportProperty = new ImportPropertyElements();
		this.pImport = new ImportElements();
		this.pQProperty = new QPropertyElements();
		this.pQLinkProperty = new QLinkPropertyElements();
		this.pQLinkObjectProperty = new QLinkObjectPropertyElements();
		this.pQLinkArrayProperty = new QLinkArrayPropertyElements();
		this.pQValueProperty = new QValuePropertyElements();
		this.pQObjectProperty = new QObjectPropertyElements();
		this.pQStringValueProperty = new QStringValuePropertyElements();
		this.pQNumberValueProperty = new QNumberValuePropertyElements();
		this.pQBooleanValueProperty = new QBooleanValuePropertyElements();
		this.pQNullValueProperty = new QNullValuePropertyElements();
		this.pQObjectArrayProperty = new QObjectArrayPropertyElements();
		this.pQStringArrayProperty = new QStringArrayPropertyElements();
		this.pQNumberArrayProperty = new QNumberArrayPropertyElements();
		this.pQEmptyArrayProperty = new QEmptyArrayPropertyElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pNumber = new NumberElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameWithWildCard = new QualifiedNameWithWildCardElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.iworkz.qon.QonDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	/// *
	// * 
	// * Qualified Object Notation (QON)
	// * 
	// * / QRoot:
	//	{QObject} type=[QObject]? "{" systemProperties+=QSystemProperty* properties+=QProperty* "}";
	public QRootElements getQRootAccess() {
		return pQRoot;
	}
	
	public ParserRule getQRootRule() {
		return getQRootAccess().getRule();
	}

	//QObject:
	//	{QObject} type=[QObject]? "{" properties+=QProperty* "}";
	public QObjectElements getQObjectAccess() {
		return pQObject;
	}
	
	public ParserRule getQObjectRule() {
		return getQObjectAccess().getRule();
	}

	//QSystemProperty:
	//	NamespaceProperty | SchemaProperty | ImportProperty;
	public QSystemPropertyElements getQSystemPropertyAccess() {
		return pQSystemProperty;
	}
	
	public ParserRule getQSystemPropertyRule() {
		return getQSystemPropertyAccess().getRule();
	}

	//NamespaceProperty:
	//	"$namespace" ":" value=STRING;
	public NamespacePropertyElements getNamespacePropertyAccess() {
		return pNamespaceProperty;
	}
	
	public ParserRule getNamespacePropertyRule() {
		return getNamespacePropertyAccess().getRule();
	}

	//SchemaProperty:
	//	"$schema" "-" ">" link=[QObject|STRING];
	public SchemaPropertyElements getSchemaPropertyAccess() {
		return pSchemaProperty;
	}
	
	public ParserRule getSchemaPropertyRule() {
		return getSchemaPropertyAccess().getRule();
	}

	//ImportProperty:
	//	{ImportProperty} "$imports" ":" "[" (values+=Import ("," values+=Import)*)? "]";
	public ImportPropertyElements getImportPropertyAccess() {
		return pImportProperty;
	}
	
	public ParserRule getImportPropertyRule() {
		return getImportPropertyAccess().getRule();
	}

	//Import:
	//	importedNamespace=STRING;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//QProperty:
	//	QValueProperty | QLinkProperty;
	public QPropertyElements getQPropertyAccess() {
		return pQProperty;
	}
	
	public ParserRule getQPropertyRule() {
		return getQPropertyAccess().getRule();
	}

	//QLinkProperty:
	//	QLinkObjectProperty | QLinkArrayProperty;
	public QLinkPropertyElements getQLinkPropertyAccess() {
		return pQLinkProperty;
	}
	
	public ParserRule getQLinkPropertyRule() {
		return getQLinkPropertyAccess().getRule();
	}

	//QLinkObjectProperty:
	//	propertyName=ID "-" ">" link=[QObject|STRING];
	public QLinkObjectPropertyElements getQLinkObjectPropertyAccess() {
		return pQLinkObjectProperty;
	}
	
	public ParserRule getQLinkObjectPropertyRule() {
		return getQLinkObjectPropertyAccess().getRule();
	}

	//QLinkArrayProperty:
	//	propertyName=ID "-" ">" "[" (links+=[QObject|STRING] ("," links+=[QObject|STRING])*)? "]";
	public QLinkArrayPropertyElements getQLinkArrayPropertyAccess() {
		return pQLinkArrayProperty;
	}
	
	public ParserRule getQLinkArrayPropertyRule() {
		return getQLinkArrayPropertyAccess().getRule();
	}

	//QValueProperty:
	//	QStringValueProperty | QNumberValueProperty | QBooleanValueProperty | QNullValueProperty | QObjectProperty |
	//	QStringArrayProperty | QObjectArrayProperty | QNumberArrayProperty | QEmptyArrayProperty;
	public QValuePropertyElements getQValuePropertyAccess() {
		return pQValueProperty;
	}
	
	public ParserRule getQValuePropertyRule() {
		return getQValuePropertyAccess().getRule();
	}

	//QObjectProperty:
	//	propertyName=ID ":" value=QObject;
	public QObjectPropertyElements getQObjectPropertyAccess() {
		return pQObjectProperty;
	}
	
	public ParserRule getQObjectPropertyRule() {
		return getQObjectPropertyAccess().getRule();
	}

	//QStringValueProperty:
	//	propertyName=ID ":" value=STRING;
	public QStringValuePropertyElements getQStringValuePropertyAccess() {
		return pQStringValueProperty;
	}
	
	public ParserRule getQStringValuePropertyRule() {
		return getQStringValuePropertyAccess().getRule();
	}

	//QNumberValueProperty:
	//	propertyName=ID ":" value=Number;
	public QNumberValuePropertyElements getQNumberValuePropertyAccess() {
		return pQNumberValueProperty;
	}
	
	public ParserRule getQNumberValuePropertyRule() {
		return getQNumberValuePropertyAccess().getRule();
	}

	//QBooleanValueProperty:
	//	propertyName=ID ":" value=BooleanValue;
	public QBooleanValuePropertyElements getQBooleanValuePropertyAccess() {
		return pQBooleanValueProperty;
	}
	
	public ParserRule getQBooleanValuePropertyRule() {
		return getQBooleanValuePropertyAccess().getRule();
	}

	//QNullValueProperty:
	//	propertyName=ID ":" "null";
	public QNullValuePropertyElements getQNullValuePropertyAccess() {
		return pQNullValueProperty;
	}
	
	public ParserRule getQNullValuePropertyRule() {
		return getQNullValuePropertyAccess().getRule();
	}

	//QObjectArrayProperty:
	//	propertyName=ID ":" "[" values+=QObject ("," values+=QObject)* "]";
	public QObjectArrayPropertyElements getQObjectArrayPropertyAccess() {
		return pQObjectArrayProperty;
	}
	
	public ParserRule getQObjectArrayPropertyRule() {
		return getQObjectArrayPropertyAccess().getRule();
	}

	//QStringArrayProperty:
	//	propertyName=ID ":" "[" values+=STRING ("," values+=STRING)* "]";
	public QStringArrayPropertyElements getQStringArrayPropertyAccess() {
		return pQStringArrayProperty;
	}
	
	public ParserRule getQStringArrayPropertyRule() {
		return getQStringArrayPropertyAccess().getRule();
	}

	//QNumberArrayProperty:
	//	propertyName=ID ":" "[" values+=Number ("," values+=Number)* "]";
	public QNumberArrayPropertyElements getQNumberArrayPropertyAccess() {
		return pQNumberArrayProperty;
	}
	
	public ParserRule getQNumberArrayPropertyRule() {
		return getQNumberArrayPropertyAccess().getRule();
	}

	//QEmptyArrayProperty:
	//	propertyName=ID ":" "[" "]";
	public QEmptyArrayPropertyElements getQEmptyArrayPropertyAccess() {
		return pQEmptyArrayProperty;
	}
	
	public ParserRule getQEmptyArrayPropertyRule() {
		return getQEmptyArrayPropertyAccess().getRule();
	}

	//BooleanValue:
	//	true?="true" | false?="false";
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}

	//Number hidden():
	//	"-"? INT ("." INT)? (("e" | "E") ("+" | "-") INT)?;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//QualifiedName hidden():
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildCard hidden():
	//	QualifiedName ".*"?;
	public QualifiedNameWithWildCardElements getQualifiedNameWithWildCardAccess() {
		return pQualifiedNameWithWildCard;
	}
	
	public ParserRule getQualifiedNameWithWildCardRule() {
		return getQualifiedNameWithWildCardAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
